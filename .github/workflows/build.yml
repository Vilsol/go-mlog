name: build

on: [push, pull_request]

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            file: go-mlog-linux-amd64
            args: --best --lzma
            strip: true
            cgo: 0
          - os: windows-latest
            file: go-mlog-win-amd64.exe
            args: -9
            strip: false
            cgo: 1
          - os: macos-latest
            file: go-mlog-osx-amd64
            args: --best
            strip: false
            cgo: 1
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.18-beta2

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Build
        run: go build -ldflags="-s -w" -v -o ${{ matrix.file }} .
        env:
          CGO_ENABLED: ${{ matrix.cgo }}

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18-beta2

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Test
        run: |
          go test -v -coverprofile=coverage.txt -covermode=atomic -coverpkg=./... ./...
        env:
          CGO_ENABLED: 0

      - name: Codecov
        uses: codecov/codecov-action@v1

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.18-beta2

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          args: cli cmd m m/impl runtime transpiler x x/impl
          skip-go-installation: true
